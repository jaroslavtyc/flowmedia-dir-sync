#!/usr/bin/env php
<?php

namespace JaroslavTyc\DirSync;

use JaroslavTyc\DirSync\Actions\CreateDirAction;
use JaroslavTyc\DirSync\FileSystem\DirCreator;
use JaroslavTyc\DirSync\FileSystem\FileReader;
use JaroslavTyc\DirSync\FileSystem\JsonDecoder;

require_once __DIR__ . '/enable_autoloader';

$options = getopt('j::w::d::', ['json-config::', 'working-dir::', 'dry-run::']);

if (empty($options)) {
    echo <<<TEXT
Usage: dirsync [options...]
 -j, --json-config Path to a JSON file with a configuration for directories synchronization, default is 'dirsync.json'
 -w, --working-dir Starting directory for directories synchronization, default is current working directory
 -d, --dry-run Try as much as possible without touching anything in fact

Examples:
`dirsync --json-config=destroy-all.json --dry-run` will read configuration from 'destroy-all.json' file in current working directory and guess a result

TEXT;

    exit(0);
}
$dryRun = isset($options['dry-run']) || isset($options['d']);
$jsonConfigPath = $options['json-config'] ?? $options['j'] ?? 'dirsync.json';
$workingDir = $options['working-dir'] ?? $options['w'] ?? getcwd();

if ($dryRun) {
    echo "Running DirSync in a dry run mode...\n";
} else {
    echo "Running DirSync...\n";
}
try {
    $dirSyncOptions = new DirSyncOptions([
        DirSyncOptions::JSON_CONFIG_PATH => $jsonConfigPath,
        DirSyncOptions::DRY_RUN => $dryRun,
        DirSyncOptions::WORKING_DIR => $workingDir,
    ]);

    $fileReader = new FileReader();
    $jsonDecoder = new JsonDecoder();
    $dirSyncConfig = DirSyncConfig::createFromOptions($dirSyncOptions, $fileReader, $jsonDecoder);

    $actionsRunner = new ActionsRunner();
    $dirCreator = new DirCreator();
    $actionsRunner->registerAction(new CreateDirAction($dirCreator), ActionsRunner::DEFAULT_ACTION);

    $dirSync = new DirSync($dirSyncConfig, $actionsRunner);
    $dirSync->syncAginstDir($dirSyncOptions->getWorkingDir(), $dirSyncOptions->isDryRun());
    echo "done\n";
    exit(0);
} catch (\Throwable $syncError) {
    printf("DirSync failed:\n%s\nDetail:\n%s\n", $syncError->getMessage(), $syncError->getTraceAsString());
    exit(1);
}